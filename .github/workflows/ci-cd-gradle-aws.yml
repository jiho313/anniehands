name: Java CI/CD with Gradle And AWS Service

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
# env: yml파일에서 사용할 변수 추가
env: 
  PROJECT_NAME: anniehands
  BUCKET_NAME: anniehands-bucket
  CODE_DEPLOY_APP_NAME: anniehands
  DEPLOYMENT_GROUP_NAME: anniehands-codeDeploy 

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

# action secret에서 gitignore한 appliction-dev.yml 생성
    - name: Create application-aws.properties
      run: |
        echo "${{ secrets.APPLICATION_DEV_YML }}" > ./src/main/resources/application-dev.yml
      shell: bash

# gradlew 실행 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      shell: bash
      
# 그레이들 빌드 툴로 빌드
    - name: Build with Gradle
      run: ./gradlew build
      shell: bash

# 빌드한 파일 zip으로 생성
    - name: Make Zip File
      run: zip -qq -r ./$GITHUB_SHA.zip .
      shell: bash

# AWS 서비스에 접근할 수 있는 권한을 얻음
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
        aws-region: ap-northeast-2

# S3에 빌드한 애플리케이션 zip파일 업로드
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

# CodeDeploy에 배포 요청
    - name: Code Deploy To EC2 instance
      run: aws deploy create-deployment 
              --application-name $CODE_DEPLOY_APP_NAME 
              --deployment-config-name CodeDeployDefault.AllAtOnce
              --deployment-group-name $DEPLOYMENT_GROUP_NAME 
              --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip  
